name: Android Release Build

on:
  workflow_dispatch:
    inputs:
      tagName:
        description: 'Tag for the release (e.g., v1.0.0)'
        required: true
        type: string

jobs:
  build-and-release:
    name: Build and Create Release
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Decode Keystore
        run: |
          echo "${{ secrets.RELEASE_KEYSTORE_BASE64 }}" | base64 --decode > $HOME/release.p12

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Build with Gradle (Release APK)
        run: ./gradlew assembleRelease
        env:
          KEYSTORE_PATH: ${{ env.HOME }}/release.p12
          KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
          KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.event.inputs.tagName }}
          release_name: Release ${{ github.event.inputs.tagName }}
          body: |
            Release for version ${{ github.event.inputs.tagName }}.
            More detailed release notes to-be-written.
          draft: true
          prerelease: false

      - name: Clean up tag name
        id: clean_tag
        run: |
          # Use shell parameter expansion to remove a leading 'v' if it exists
          CLEAN_TAG=${{ github.event.inputs.tagName }}
          echo "tag_name=${CLEAN_TAG#v}" >> $GITHUB_OUTPUT

      - name: Upload Release APK
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: app/build/outputs/bundle/release/app-release.apk
          asset_name: ${{ github.event.repository.name }}-${{ steps.clean_tag.outputs.tag_name }}.apk
          asset_content_type: application/vnd.android.package-archive
